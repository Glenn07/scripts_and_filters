filter {
  fingerprint {
    method => "SHA1"
    source => [ "@timestamp" ]
    key => "unx elk"
  }
## Unix Error log filter for server reboot messages
  if [program] == "AIX_E" or [program] == "LNX_E" {
    if "server_rebooted" in [message] {
      grok {
         patterns_dir => "/etc/logstash/patterns"
         match => { "message" => "%{DATA:server} %{IP:ip_address} %{aix_reboot_time:reboot-time} %{GREEDYDATA:error_msg}" }
      }
      date {
        match => [ "reboot-time", "MMM dd HHmmss" ]
 #       remove_field => [ "reboot-time" ]
      }
      mutate { add_field => { err_type => "reboot" } }
    }
  }
## Unix Performance log filter
  if [program] == "AIX_P" or [program] == "LNX_P" {
    if "disk" in [message] {
        grok {
          match => { "message" => "%{DATA:server} %{IP:ip_address} %{WORD:metric-name} %{DATA:disk} %{GREEDYDATA:mtr-values}" }
          add_field => { perf_msg => "%{metric-name} %{disk} %{mtr-values}" }
        }
      }
    else {
      grok {
        match => { "message" => "%{DATA:server} %{IP:ip_address} %{WORD:metric-name} %{GREEDYDATA:mtr-values}" }
        add_field => { perf_msg => "%{metric-name} %{mtr-values}" }
      }
    }
  } else if [program] == "AIX_E" {
      grok {
        patterns_dir => "/etc/logstash/patterns"
        match => { "message" => "%{DATA:server} %{IP:ip_address} %{WORD:err_id} %{aix_timestamp:err_time} %{WORD:err_type} %{WORD:err_class} %{WORD:err_rsrc} %{GREEDYDATA:err_log}" }
        add_field => { error_msg => "%{err_id} %{err_time} %{err_type} %{err_class} %{err_rsrc} %{err_log}" }
      }
      date {
        match => [ "err_time", "MMddHHmmyy" ]
      }
      if [err_type] == "I" {
        mutate { replace => { "err_type" => "Info" } }
      } else if [err_type] == "P" {
        mutate { replace => { "err_type" => "Perm" } }
      } else if [err_type] == "T" {
        mutate { replace => { "err_type" => "Temp" } }
      } else if [err_type] == "U" {
        mutate { replace => { "err_type" => "Unkn" } }
      }
  } else if "LNX_E" in [message] {
      grok {
        break_on_match => true
        match => { "message" => "%{IP:ip_address}  %{DATA:server} %{GREEDYDATA:error_msg}" }
      }
      mutate { 
        gsub => ["error_msg", "LNX_E", ""] 
        strip => ["error_msg", "message"]
      }
      if [error_msg] == "" {
        drop { }
      }
      if "warning" in [message] {
        mutate { add_field => { err_type => "warning" } }
      } else if "error" in [message] {
        mutate { add_field => { err_type => "error" } } 
      } else if "critical" in [message] {
        mutate { add_field => { err_type => "critical" } } 
      } else if "alert" in [message] {
        mutate { add_field => { err_type => "alert" } }
      } else if "emergency" in [message] {
        mutate { add_field => { err_type => "emergency" } }
      } else {
        mutate { add_field => { err_type => "error" } }
      }
      mutate {
        replace => { "program" => "LNX_E" }
      }
  }
}

output {
  if [program] == "AIX_P" or [program] == "LNX_P" {
    elasticsearch {
      index => "its-unx-perf-%{+YYYY.MM}"
      hosts => [ "elastic_server1:9200" ]
      user => "elastic"
      password => "elastic"
      document_id => "%{fingerprint}"
    }
  } else if [program] == "AIX_E" or [program] == "LNX_E" {
    elasticsearch {
      index => "its-unx-err-%{+YYYY.MM}"
      hosts => [ "elastic_server1:9200" ]
      user => "elastic"      
      password => "elastic"
      document_id => "%{fingerprint}"
    }
  }
#stdout { codec => rubydebug }
}
