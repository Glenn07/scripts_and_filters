filter {
# our vcenters have vmvcs; so filtered the logsource based on that
  if [logsource] =~ /(?i)vmvcs/ {
# dropping some messages that we did not require
    if ( [message] =~ "User root@127.0.0.1|sent email to|User dcui|Cleanup of Temporary Directories|Running task VMware vSphere Update Manager|VSPHERE.LOCAL|sendmail|applmgmt-audit|Check new notifications|Virtual machine CPU usage|Host CPU usage|Skip service vmcam health check|vsphere-webclient|vim.event.ScheduledTaskCompletedEvent|vim.event.TaskEvent|Executing service batch|Authenticated user|Executing op API_HEALTH|Constructed command|Successfully executed service batch operation|Skip service imagebuilder|POST|HTTP|CROND|cron|Ignoring" ) {
      drop { }
    }
# filter for the login and logout events
    if [message] =~ "vim.event.UserLoginSessionEvent|vim.event.UserLogoutSessionEvent" {
      grok {
        break_on_match => true
        match => {"message" => "%{WORD:program}\[%{NUMBER}\] %{GREEDYDATA} \[User %{GREEDYDATA:vcmessage}\]"}
      }
    } else {
      grok {
    	break_on_match => true
    	match => [
          "message", "%{WORD:program}\[%{NUMBER}\] %{GREEDYDATA} \[%{GREEDYDATA:vcmessage}\]$",
          "message", "%{WORD:program}\[%{NUMBER}\] %{GREEDYDATA}: %{WORD}: %{GREEDYDATA:vcmessage}",
          "message", "%{WORD:program}\[%{NUMBER}\] %{GREEDYDATA:vcmessage}",
          "message", "%{GREEDYDATA:vcmessage}"
    	]
      }
    }
    if [message] =~ "vim.event.UserLoginSessionEvent|vim.event.UserLogoutSessionEvent|user|User" {
      mutate { add_tag => "usersess" }
    } else if [message] =~ "vim.event.AlarmActionTriggeredEvent" {
      mutate { add_tag => "alarm" }
    } else if [message] =~ /(?i)warn/ {
      mutate { add_tag => "warn" }
    } else if [message] =~ /(?i)err/ {
      mutate { add_tag => "error" }
    } else if [message] =~ /(?i)ntp/ {
      mutate { add_tag => "ntp" }
    } else {
      mutate { add_tag => "info" }
    }
  }
}

output {
  if [logsource] =~ /(?i)vmvcs/ {
    elasticsearch {      
      index => "vcsa-%{+YYYY.MM}"
      hosts => [ "1.2.3.4:9200" ]
    }
  }
}
